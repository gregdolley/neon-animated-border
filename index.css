/*
Based on codepen Magic Card by @gayane-gasparyan.
I just wanted to make an animated border.
*/

/*
TODO: 

Challenge: this @property construct, where you can make your own properties which
can then be used directly as a calculated value in a keyframe, that's super powerful,
BUT... looks like only Chrome supports it! I tried it in Firefox - doesn't work. I
heard it doesn't work in Safari either. 

So that's the challenge: try some other method of grabbing the intermediate calculated
values of a keyframe, and stick that value into a custom CSS variable (just like --card-height
and --card-width under ":root{}" below). If you could just get that value in a CSS var,
you could then reference it in the "background-image: linear-gradient()" function as the
first parameter using just "var()."
*/
@property --rotate {
  syntax: "<angle>";
  initial-value: 132deg;
  inherits: false;
}

:root {
  --card-height: 50vh;
  --card-width: calc(var(--card-height) / 1.5);
}

body {
  min-height: 100vh;
  background: #212534;
  display: flex;
  align-items: center;
  flex-direction: column;
  padding-top: 5rem;
  padding-bottom: 5rem;
  box-sizing: border-box;
}

.card {
  background: #191c29;
  width: var(--card-width);
  height: var(--card-height);
  position: relative;
  display: flex;
  color: rgb(88 199 250 / 20%);
}

.card::before {
  position: absolute;
  z-index: -1;
  content: "";
  top: -1px;
  left: -1px;
  width: calc(var(--card-width) + 2px);
  height: calc(var(--card-height) + 3px);
  background-image: linear-gradient(
    var(--rotate),
    #5ddcff,
    #3c67e3 43%,
    #4e00c2
  );
  animation: spin 2.5s linear infinite;
}

@keyframes spin {
  0% {
    --rotate: 0deg;
  }
  100% {
    --rotate: 360deg;
  }
}
